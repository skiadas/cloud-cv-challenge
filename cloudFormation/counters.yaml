AWSTemplateFormatVersion: "2010-09-09"
Description: Resources needed to orchestrate the counters
Transform: AWS::Serverless-2016-10-31

Parameters:
  ResourcePrefix:
    Description: A prefix to be used for resource names, useful for separate testing
    Type: String
    Default: test-resume
    AllowedPattern: ^[a-zA-Z\-\_0-9]+$
  EnvType:
    Description: Environment type.
    Default: test
    Type: String
    AllowedValues:
      - prod
      - test
    ConstraintDescription: must specify prod or test.

Conditions:
  CreateProdResources: !Equals [!Ref EnvType, prod]

Globals:
  Function:
    Runtime: python3.9
    # The following should work but it doesn't. Known bug
    # CodeUri: ../app/src

Resources:
  NamesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./names.yaml
      Parameters:
        ResourcePrefix: !Ref ResourcePrefix
        ParameterBucketPrefix:
          Fn::If:
            - CreateProdResources
            - skiadas/resume/counters
            - dev-skiadas/resume/counters

  QueueNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !GetAtt NamesStack.Outputs.QueueNameParameterName
      Type: String
      Value: !GetAtt NamesStack.Outputs.QueueName
      Description: SSM Parameter for the queue name
  TotalsTableParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !GetAtt NamesStack.Outputs.TotalsTableParameterName
      Type: String
      Value: !Ref TotalCountTable
      Description: The name of the totals table
  PathsTableParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !GetAtt NamesStack.Outputs.PathsTableParameterName
      Type: String
      Value: !Ref SiteCountTable
      Description: The name of the table holding paths counts
  IpCountTableParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !GetAtt NamesStack.Outputs.IpCountTableParameterName
      Type: String
      Value: !Ref IpCountTable
      Description: The name of the table holding ip counts

  IncomingRequestFunction:
    Type: AWS::Serverless::Function
    Name: !Sub '${ResourcePrefix}-lambda'
    Properties:
      CodeUri: ../app/src
      Handler:
        Fn::If:
          - CreateProdResources
          - app.lambda_incoming_to_sqs_handler
          - app.lambda_incoming_to_sqs_handler_dev
      Architectures:
        - x86_64
      AutoPublishAlias: IncomingRequestFunction
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - edgelambda.amazonaws.com
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt IncomingRequestQueue.QueueName
        - SSMParameterReadPolicy:
            ParameterName: !GetAtt NamesStack.Outputs.AllParameterNamesForPolicy

  SqsToDynamoDbFunction:
    Type: AWS::Serverless::Function
    Name: !Sub '${ResourcePrefix}-sqs-to-dynamodb'
    Properties:
      CodeUri: ../app/src
      Handler: app.lambda_processing_sqs_message
      Architectures:
        - x86_64
      Policies:
        - SQSPollerPolicy:
            QueueName: !GetAtt IncomingRequestQueue.QueueName
        - DynamoDBCrudPolicy:
            TableName: !Sub '${ResourcePrefix}-*'
        - SSMParameterReadPolicy:
            ParameterName: !GetAtt NamesStack.Outputs.AllParameterNamesForPolicy
      Events:
        NewSQSMessageEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt IncomingRequestQueue.Arn
            BatchSize: 1

  SiteCountTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: path
        Type: String
      Tags:
        project: resume-skiadas

  TotalCountTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: total
        Type: String
      Tags:
        project: resume-skiadas

  IpCountTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: ip
        Type: String
      Tags:
        project: resume-skiadas

  IncomingRequestQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !GetAtt NamesStack.Outputs.QueueName
      MessageRetentionPeriod: 3600 # One hour
      Tags:
        - Key: project
          Value: resume-skiadas

Outputs:
  IncomingRequestFunctionVersion:
    Description: Function to trigger on viewer requests
    Value: !Ref IncomingRequestFunction.Version
